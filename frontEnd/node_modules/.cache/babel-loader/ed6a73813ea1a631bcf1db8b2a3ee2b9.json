{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rachel\\\\Documents\\\\GitHub\\\\stcharlesmma\\\\frontEnd\\\\src\\\\components\\\\adminPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle as questionMark } from '@fortawesome/free-solid-svg-icons';\nimport sortItems from './../utils/sort';\nimport Pagination from './common/pagination';\nimport TableHeader from './common/tableHeader';\nimport TableBody from './common/tableBody';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Admin = () => {\n  _s();\n\n  const [coaches, setCoaches] = useState([]);\n  const [coach, setCoach] = useState({\n    name: '',\n    classesCoached: [],\n    image: '',\n    file: undefined,\n    order: 999\n  });\n  const [tableInfo, setTableInfo] = useState({\n    pageSize: 2,\n    currentPage: 1,\n    sortColumn: {\n      path: 'name',\n      order: 'asc'\n    }\n  });\n  const [crudFunction, setCrudFunction] = useState('');\n  const [currentItemID, setCurrentItemID] = useState('');\n  const columns = [{\n    label: 'Name',\n    path: 'name'\n  }, {\n    label: 'Classes Coached',\n    path: 'classesCoached'\n  }, {\n    label: 'Display Order',\n    path: 'order'\n  }, {\n    label: 'Image',\n    path: 'image'\n  }, {\n    label: '',\n    key: 1\n  }];\n  const formElement = useRef(null);\n\n  const fetchCoaches = async () => {\n    const coachList = await axios.get('/api/coaches');\n    setCoaches(coachList.data);\n  };\n\n  const resetForm = () => {\n    setCoach({\n      name: '',\n      classesCoached: [],\n      image: '',\n      file: undefined,\n      order: 999\n    });\n    setCrudFunction('');\n    setCurrentItemID('');\n    formElement.current.reset();\n  };\n\n  const handleSubmit = async (e, id) => {\n    e.preventDefault();\n\n    if (crudFunction === 'create') {\n      const formData = new FormData();\n      formData.append('imageData', coach.file[0]);\n      const fileRes = await axios.post('/api/images', formData);\n      const coachRes = await axios.post('/api/coaches', coach);\n      console.log(fileRes.data);\n      console.log(coachRes.data);\n\n      if (fileRes.data === coachRes.data) {\n        alert('New Coach Created');\n        const coachList = await axios.get('/api/coaches');\n        setCoaches(coachList.data);\n        resetForm();\n      } else {\n        alert('Something went wrong. Make sure image file type is .jpg or .png');\n      }\n    }\n\n    if (crudFunction === 'update') {\n      if (coach.file) {\n        const formData = new FormData();\n        formData.append('imageData', coach.file[0]);\n        const oldCoachRes = await axios.get(`/api/coaches/${currentItemID}`);\n        const fileDeleteRes = await axios.delete(`/api/images/${oldCoachRes.data.image}`);\n        const fileRes = await axios.post('/api/images', formData);\n        console.log(fileDeleteRes.data);\n        console.log(fileRes.data);\n      }\n\n      const coachRes = await axios.post(`/api/coaches/${currentItemID}`, coach);\n      console.log(coachRes.data);\n\n      if (coachRes.data === \"Coach Updated\") {\n        alert('Coach Updated');\n        const coachList = await axios.get('/api/coaches');\n        setCoaches(coachList.data);\n        resetForm();\n      } else {\n        alert('Something went wrong. Make sure image file type is .jpg or .png');\n      }\n    }\n\n    resetForm();\n  };\n\n  const handleUpdate = coachToUpdate => {\n    setCoach({\n      name: coachToUpdate.name,\n      classesCoached: coachToUpdate.classesCoached,\n      image: coachToUpdate.image,\n      order: coachToUpdate.order\n    });\n\n    for (let item of coach.classesCoached) {\n      handleAddClass(item);\n    }\n\n    ;\n    setCrudFunction('update');\n    setCurrentItemID(coachToUpdate._id);\n  };\n\n  const handleDelete = async coach => {\n    console.log(coach);\n    const coachRes = await axios.delete(`/api/coaches/${coach._id}`);\n    const fileRes = await axios.delete(`/api/images/${coach.image}`);\n    console.log(coachRes.data);\n    console.log(fileRes.data);\n\n    if (fileRes.data === coachRes.data) {\n      alert('Coach Deleted');\n      const coachList = await axios.get('/api/coaches');\n      setCoaches(coachList.data);\n    } else {\n      alert('Something went wrong');\n    }\n  };\n\n  const handleAddFile = file => {\n    let newCoach = { ...coach\n    };\n    newCoach.file = file;\n    newCoach.image = file[0].name;\n    setCoach(newCoach);\n  };\n\n  const handleSort = sortColumn => {\n    let newTableInfo = { ...tableInfo\n    };\n    tableInfo.sortColumn = sortColumn;\n    setTableInfo(newTableInfo);\n  };\n\n  const paginate = page => {\n    const tableInfoLocal = { ...tableInfo\n    };\n    tableInfo.currentPage = page;\n    setTableInfo(tableInfoLocal);\n  };\n\n  const handleAddClass = classToAdd => {\n    let newCoach = { ...coach\n    };\n    newCoach.classesCoached = [...coach.classesCoached, classToAdd];\n    setCoach(newCoach);\n  };\n\n  const handleFormUpdate = eventTarget => {\n    let newCoach = { ...coach\n    };\n    newCoach[eventTarget.name] = eventTarget.value;\n    setCoach(newCoach);\n  };\n\n  const sortedData = sortItems(coaches, tableInfo.sortColumn.path, tableInfo.sortColumn.order);\n  let paginatedData = sortedData.slice((tableInfo.currentPage - 1) * tableInfo.pageSize, tableInfo.currentPage * tableInfo.pageSize);\n  let formClasses = crudFunction ? \"formContainer is-visible\" : \"formContainer\";\n  useEffect(() => {\n    fetchCoaches();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ADMIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"COACHES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n          columns: columns,\n          sortColumn: tableInfo.sortColumn,\n          onSort: handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          data: paginatedData,\n          onDelete: handleDelete,\n          onUpdate: handleUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(Pagination, {\n          pageSize: tableInfo.pageSize,\n          currentPage: tableInfo.currentPage,\n          paginate: paginate,\n          itemCount: coaches.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCrudFunction('create'),\n          children: \"Add Coach\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: formClasses,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          ref: formElement,\n          onSubmit: e => handleSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            name: \"name\",\n            value: coach.name,\n            onChange: e => {\n              let newCoach = { ...coach\n              };\n              newCoach.name = e.target.value;\n              setCoach(newCoach);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"classesCoached\",\n            children: \"Classes Coached\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"classesCoached\",\n            defaultValue: '-Select-',\n            name: \"classesCoached\",\n            onChange: e => {\n              handleAddClass(e.target.value);\n              e.target.value = '-Select-';\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"-Select-\",\n              disabled: true,\n              children: \"-Select-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Wrestling\",\n              children: \"Wrestling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Jiu-Jitsu\",\n              children: \"Jiu-Jitsu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Boxing\",\n              children: \"Boxing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"MMA\",\n              children: \"MMA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this), coach.classesCoached.length > 0 && coach.classesCoached.map(classCoached => {\n            console.log(classCoached);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: classCoached\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  let newCoach = { ...coach\n                  };\n                  newCoach.classesCoached = newCoach.classesCoached.filter(x => x !== classCoached);\n                  setCoach(newCoach);\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this)]\n            }, classCoached, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"order\",\n            children: [\"Display Order \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"icon\",\n              title: \"This controls the order in which coaches are displayed. \\\"1\\\" would be at the top of the page. Numbers can be repeated.\",\n              icon: questionMark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"order\",\n            type: \"number\",\n            name: \"order\",\n            value: coach.order,\n            onChange: e => handleFormUpdate(e.target),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: crudFunction === 'create' ? true : false,\n            type: \"file\",\n            id: \"image\",\n            name: \"image\",\n            onChange: e => {\n              handleAddFile(e.target.files);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => resetForm(),\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Admin, \"q6lUh2oRPjZ3C941LJidj2pmF/w=\");\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["C:/Users/Rachel/Documents/GitHub/stcharlesmma/frontEnd/src/components/adminPage.jsx"],"names":["React","useState","useEffect","useRef","axios","FontAwesomeIcon","faQuestionCircle","questionMark","sortItems","Pagination","TableHeader","TableBody","Admin","coaches","setCoaches","coach","setCoach","name","classesCoached","image","file","undefined","order","tableInfo","setTableInfo","pageSize","currentPage","sortColumn","path","crudFunction","setCrudFunction","currentItemID","setCurrentItemID","columns","label","key","formElement","fetchCoaches","coachList","get","data","resetForm","current","reset","handleSubmit","e","id","preventDefault","formData","FormData","append","fileRes","post","coachRes","console","log","alert","oldCoachRes","fileDeleteRes","delete","handleUpdate","coachToUpdate","item","handleAddClass","_id","handleDelete","handleAddFile","newCoach","handleSort","newTableInfo","paginate","page","tableInfoLocal","classToAdd","handleFormUpdate","eventTarget","value","sortedData","paginatedData","slice","formClasses","length","target","map","classCoached","filter","x","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faQuestionCircle as questionMark } from '@fortawesome/free-solid-svg-icons';\r\nimport sortItems from './../utils/sort';\r\nimport Pagination from './common/pagination';\r\nimport TableHeader from './common/tableHeader';\r\nimport TableBody from './common/tableBody';\r\n\r\nconst Admin = () => {\r\n    const [coaches, setCoaches] = useState([]);\r\n    const [coach, setCoach] = useState({\r\n        name: '',\r\n        classesCoached: [],\r\n        image: '',\r\n        file: undefined,\r\n        order: 999\r\n    });\r\n    const [tableInfo, setTableInfo] = useState({\r\n        pageSize: 2,\r\n        currentPage: 1,\r\n        sortColumn: {\r\n            path: 'name',\r\n            order: 'asc'\r\n        },\r\n    })\r\n    const [crudFunction, setCrudFunction] = useState('');\r\n    const [currentItemID, setCurrentItemID] = useState('');\r\n    const columns = [\r\n        { label: 'Name', path: 'name' },\r\n        { label: 'Classes Coached', path: 'classesCoached' },\r\n        { label: 'Display Order', path: 'order' },\r\n        { label: 'Image', path: 'image' },\r\n        { label: '', key: 1 },\r\n    ]\r\n\r\n    const formElement = useRef(null);\r\n\r\n    const fetchCoaches = async () => {\r\n        const coachList = await axios.get('/api/coaches');\r\n        setCoaches(coachList.data);\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setCoach(\r\n            {\r\n                name: '',\r\n                classesCoached: [],\r\n                image: '',\r\n                file: undefined,\r\n                order: 999\r\n            }\r\n        )\r\n        setCrudFunction('');\r\n        setCurrentItemID('');\r\n        formElement.current.reset();\r\n    }\r\n\r\n    const handleSubmit = async (e, id) => {\r\n        e.preventDefault();\r\n\r\n        if (crudFunction === 'create') {\r\n            const formData = new FormData();\r\n            formData.append('imageData', coach.file[0]);\r\n            const fileRes = await axios.post('/api/images', formData);\r\n            const coachRes = await axios.post('/api/coaches', coach);\r\n            console.log(fileRes.data);\r\n            console.log(coachRes.data);\r\n            if (fileRes.data === coachRes.data) {\r\n                alert('New Coach Created');\r\n                const coachList = await axios.get('/api/coaches');\r\n                setCoaches(coachList.data);\r\n                resetForm();\r\n            } else {\r\n                alert('Something went wrong. Make sure image file type is .jpg or .png')\r\n            }\r\n        } if (crudFunction === 'update') {\r\n            if (coach.file) {\r\n                const formData = new FormData();\r\n                formData.append('imageData', coach.file[0]);\r\n                const oldCoachRes = await axios.get(`/api/coaches/${currentItemID}`);\r\n                const fileDeleteRes = await axios.delete(`/api/images/${oldCoachRes.data.image}`);\r\n                const fileRes = await axios.post('/api/images', formData);\r\n                console.log(fileDeleteRes.data);\r\n                console.log(fileRes.data);\r\n            }\r\n\r\n            const coachRes = await axios.post(`/api/coaches/${currentItemID}`, coach);\r\n            console.log(coachRes.data);\r\n            if (coachRes.data === \"Coach Updated\") {\r\n                alert('Coach Updated');\r\n                const coachList = await axios.get('/api/coaches');\r\n                setCoaches(coachList.data);\r\n                resetForm();\r\n            } else {\r\n                alert('Something went wrong. Make sure image file type is .jpg or .png')\r\n            }\r\n        }\r\n        resetForm();\r\n    };\r\n\r\n    const handleUpdate = coachToUpdate => {\r\n        setCoach({\r\n            name: coachToUpdate.name,\r\n            classesCoached: coachToUpdate.classesCoached,\r\n            image: coachToUpdate.image,\r\n            order: coachToUpdate.order\r\n        });\r\n        for (let item of coach.classesCoached) {\r\n            handleAddClass(item);\r\n        };\r\n        setCrudFunction('update');\r\n        setCurrentItemID(coachToUpdate._id);\r\n    }\r\n\r\n    const handleDelete = async (coach) => {\r\n        console.log(coach);\r\n        const coachRes = await axios.delete(`/api/coaches/${coach._id}`);\r\n        const fileRes = await axios.delete(`/api/images/${coach.image}`);\r\n        console.log(coachRes.data);\r\n        console.log(fileRes.data);\r\n        if (fileRes.data === coachRes.data) {\r\n            alert('Coach Deleted');\r\n            const coachList = await axios.get('/api/coaches');\r\n            setCoaches(coachList.data);\r\n        } else {\r\n            alert('Something went wrong');\r\n        }\r\n    };\r\n\r\n    const handleAddFile = (file) => {\r\n        let newCoach = { ...coach };\r\n        newCoach.file = file;\r\n        newCoach.image = file[0].name;\r\n        setCoach(newCoach);\r\n    }\r\n\r\n    const handleSort = (sortColumn) => {\r\n        let newTableInfo = { ...tableInfo };\r\n        tableInfo.sortColumn = sortColumn;\r\n        setTableInfo(newTableInfo);\r\n    };\r\n\r\n    const paginate = (page) => {\r\n        const tableInfoLocal = { ...tableInfo };\r\n        tableInfo.currentPage = page\r\n        setTableInfo(tableInfoLocal);\r\n    };\r\n\r\n    const handleAddClass = (classToAdd) => {\r\n        let newCoach = { ...coach };\r\n        newCoach.classesCoached = [...coach.classesCoached, classToAdd];\r\n        setCoach(newCoach);\r\n    };\r\n\r\n    const handleFormUpdate = (eventTarget) => {\r\n        let newCoach = { ...coach };\r\n        newCoach[eventTarget.name] = eventTarget.value;\r\n        setCoach(newCoach);\r\n    }\r\n\r\n    const sortedData = sortItems(coaches, tableInfo.sortColumn.path, tableInfo.sortColumn.order);\r\n\r\n    let paginatedData = sortedData.slice((tableInfo.currentPage - 1) * tableInfo.pageSize, tableInfo.currentPage * tableInfo.pageSize);\r\n\r\n    let formClasses = crudFunction ? \"formContainer is-visible\" : \"formContainer\";\r\n\r\n    useEffect(() => {\r\n        fetchCoaches();\r\n    }, [])\r\n\r\n    return (<>\r\n        <div className=\"container\">\r\n            <h1>ADMIN</h1>\r\n            <h2>COACHES</h2>\r\n            <table>\r\n                <TableHeader columns={columns} sortColumn={tableInfo.sortColumn} onSort={handleSort} />\r\n                <TableBody data={paginatedData} onDelete={handleDelete} onUpdate={handleUpdate} />\r\n            </table>\r\n            <div className='controls'>\r\n                <Pagination\r\n                    pageSize={tableInfo.pageSize}\r\n                    currentPage={tableInfo.currentPage}\r\n                    paginate={paginate}\r\n                    itemCount={coaches.length}\r\n                />\r\n                <button onClick={() => setCrudFunction('create')}>Add Coach</button>\r\n            </div>\r\n            <div className={formClasses}>\r\n                <form ref={formElement} onSubmit={(e) => handleSubmit(e)}>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input id=\"name\" type=\"text\" name=\"name\" value={coach.name} onChange={(e) => {\r\n                        let newCoach = { ...coach };\r\n                        newCoach.name = e.target.value;\r\n                        setCoach(newCoach);\r\n                    }} required />\r\n                    <label htmlFor=\"classesCoached\">Classes Coached</label>\r\n                    <select id=\"classesCoached\" defaultValue={'-Select-'} name=\"classesCoached\" onChange={(e) => {\r\n                        handleAddClass(e.target.value);\r\n                        e.target.value = '-Select-';\r\n                    }} required>\r\n                        <option value=\"-Select-\" disabled>-Select-</option>\r\n                        <option value=\"Wrestling\">Wrestling</option>\r\n                        <option value=\"Jiu-Jitsu\">Jiu-Jitsu</option>\r\n                        <option value=\"Boxing\">Boxing</option>\r\n                        <option value=\"MMA\">MMA</option>\r\n                    </select>\r\n                    {coach.classesCoached.length > 0\r\n                        && coach.classesCoached.map(classCoached => {\r\n                            console.log(classCoached);\r\n                            return (\r\n                                <div key={classCoached}>\r\n                                    <p>{classCoached}</p>\r\n                                    <button type=\"button\" onClick={() => {\r\n                                        let newCoach = { ...coach };\r\n                                        newCoach.classesCoached = newCoach.classesCoached.filter(x => x !== classCoached);\r\n                                        setCoach(newCoach);\r\n                                    }}>Remove</button>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    <label htmlFor=\"order\">Display Order <FontAwesomeIcon className=\"icon\" title='This controls the order in which coaches are displayed. \"1\" would be at the top of the page. Numbers can be repeated.' icon={questionMark} /></label>\r\n                    <input id=\"order\" type=\"number\" name=\"order\" value={coach.order} onChange={(e) => handleFormUpdate(e.target)} required />\r\n                    <label htmlFor=\"image\">Upload Image</label>\r\n                    <input required={crudFunction === 'create' ? true : false} type=\"file\" id=\"image\" name=\"image\" onChange={(e) => {\r\n                        handleAddFile(e.target.files);\r\n                    }} />\r\n                    <button type=\"submit\">Submit</button>\r\n                    <button type=\"button\" onClick={() => resetForm()}>Reset</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}