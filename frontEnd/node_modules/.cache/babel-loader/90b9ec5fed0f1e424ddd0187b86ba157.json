{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rachel\\\\Documents\\\\GitHub\\\\stcharlesmma\\\\frontEnd\\\\src\\\\components\\\\common\\\\tableHeader.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronUp as sortUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { faChevronDown as sortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableHeader = ({\n  columns,\n  sortColumn,\n  onSort\n}) => {\n  let raiseSort = path => {\n    const sortColumnLocal = sortColumn;\n\n    if (path === sortColumn.path) {\n      sortColumn.order === \"asc\" ? sortColumnLocal.order = \"desc\" : sortColumnLocal.order = \"asc\";\n    } else {\n      sortColumnLocal.order = \"asc\";\n      sortColumnLocal.path = path;\n    }\n\n    onSort(sortColumnLocal);\n  };\n\n  const renderSortIcon = column => {\n    if (column.path !== sortColumn.path) return null;\n    return /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: sortColumn.order === \"asc\" ? sortUp : sortDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: columns.map(column => {\n        return /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"icon\",\n          title: \"Click to sort data. Click again to reverse order.\",\n          onClick: () => raiseSort(column.path),\n          children: [column.label, \" \", renderSortIcon(column)]\n        }, column.path || column.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TableHeader;\nexport default TableHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableHeader\");","map":{"version":3,"sources":["C:/Users/Rachel/Documents/GitHub/stcharlesmma/frontEnd/src/components/common/tableHeader.jsx"],"names":["React","FontAwesomeIcon","faChevronUp","sortUp","faChevronDown","sortDown","TableHeader","columns","sortColumn","onSort","raiseSort","path","sortColumnLocal","order","renderSortIcon","column","map","label","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAW,IAAIC,MAAxB,QAAsC,mCAAtC;AACA,SAASC,aAAa,IAAIC,QAA1B,QAA0C,mCAA1C;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAqC;AAErD,MAAIC,SAAS,GAAIC,IAAD,IAAU;AACtB,UAAMC,eAAe,GAAGJ,UAAxB;;AACA,QAAIG,IAAI,KAAKH,UAAU,CAACG,IAAxB,EAA8B;AAC1BH,MAAAA,UAAU,CAACK,KAAX,KAAqB,KAArB,GACID,eAAe,CAACC,KAAhB,GAAwB,MAD5B,GACqCD,eAAe,CAACC,KAAhB,GAAwB,KAD7D;AAEH,KAHD,MAGO;AACHD,MAAAA,eAAe,CAACC,KAAhB,GAAwB,KAAxB;AACAD,MAAAA,eAAe,CAACD,IAAhB,GAAuBA,IAAvB;AACH;;AACDF,IAAAA,MAAM,CAACG,eAAD,CAAN;AACH,GAVD;;AAYA,QAAME,cAAc,GAAIC,MAAD,IAAY;AAC/B,QAAIA,MAAM,CAACJ,IAAP,KAAgBH,UAAU,CAACG,IAA/B,EAAqC,OAAO,IAAP;AACrC,wBAAO,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEH,UAAU,CAACK,KAAX,KAAqB,KAArB,GAA6BV,MAA7B,GAAsCE;AAA7D;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI;AAAA,gBACKE,OAAO,CAACS,GAAR,CAAYD,MAAM,IAAI;AACnB,4BAAQ;AAAI,UAAA,SAAS,EAAC,MAAd;AAAqB,UAAA,KAAK,EAAC,mDAA3B;AAA+G,UAAA,OAAO,EAAE,MAAML,SAAS,CAACK,MAAM,CAACJ,IAAR,CAAvI;AAAA,qBAAuJI,MAAM,CAACE,KAA9J,OAAsKH,cAAc,CAACC,MAAD,CAApL;AAAA,WAAoFA,MAAM,CAACJ,IAAP,IAAeI,MAAM,CAACG,GAA1G;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA5BD;;KAAMZ,W;AA8BN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronUp as sortUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronDown as sortDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TableHeader = ({ columns, sortColumn, onSort }) => {\r\n\r\n    let raiseSort = (path) => {\r\n        const sortColumnLocal = sortColumn;\r\n        if (path === sortColumn.path) {\r\n            sortColumn.order === \"asc\" ?\r\n                sortColumnLocal.order = \"desc\" : sortColumnLocal.order = \"asc\";\r\n        } else {\r\n            sortColumnLocal.order = \"asc\";\r\n            sortColumnLocal.path = path;\r\n        }\r\n        onSort(sortColumnLocal);\r\n    }\r\n\r\n    const renderSortIcon = (column) => {\r\n        if (column.path !== sortColumn.path) return null;\r\n        return <FontAwesomeIcon icon={sortColumn.order === \"asc\" ? sortUp : sortDown} />;\r\n    };\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {columns.map(column => {\r\n                    return (<th className=\"icon\" title=\"Click to sort data. Click again to reverse order.\" key={column.path || column.key} onClick={() => raiseSort(column.path)}>{column.label} {renderSortIcon(column)}</th>)\r\n                })}\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nexport default TableHeader;"]},"metadata":{},"sourceType":"module"}