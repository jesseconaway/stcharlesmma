{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rachel\\\\Documents\\\\GitHub\\\\stcharlesmma\\\\frontEnd\\\\src\\\\components\\\\adminPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle as questionMark } from '@fortawesome/free-solid-svg-icons';\nimport sortItems from './../utils/sort';\nimport Pagination from './common/pagination';\nimport TableHeader from './common/tableHeader';\nimport TableBody from './common/tableBody';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Admin = () => {\n  _s();\n\n  const [coaches, setCoaches] = useState([]);\n  const [coachName, setCoachName] = useState('');\n  const [coachClassesCoached, setCoachClassesCoached] = useState([]);\n  const [coachImage, setCoachImage] = useState('');\n  const [coachFile, setCoachFile] = useState(undefined);\n  const [coachOrder, setCoachOrder] = useState(999);\n  const [tableInfo, setTableInfo] = useState({\n    pageSize: 6,\n    currentPage: 1,\n    sortColumn: {\n      path: 'name',\n      order: 'asc'\n    }\n  });\n  const [crudFunction, setCrudFunction] = useState('');\n  const [currentItemID, setCurrentItemID] = useState('');\n  const columns = [{\n    label: 'Name',\n    path: 'name'\n  }, {\n    label: 'Display Order',\n    path: 'order'\n  }, {\n    label: 'Image',\n    path: 'image'\n  }, {\n    label: 'Classes Coached',\n    path: 'classesCoached'\n  }, {\n    label: '',\n    key: 1\n  }];\n  const formElement = useRef(null);\n\n  const fetchCoaches = async () => {\n    const coachList = await axios.get('/api/coaches');\n    setCoaches(coachList.data);\n  };\n\n  const resetForm = () => {\n    setCoachName('');\n    setCoachClassesCoached([]);\n    setCoachImage('');\n    setCoachOrder(999);\n    setCoachFile(undefined);\n    setCrudFunction('');\n    setCurrentItemID('');\n    formElement.current.reset();\n  };\n\n  const handleSubmit = async (e, id) => {\n    e.preventDefault();\n\n    if (crudFunction === 'create') {\n      const newCoach = {\n        name: coachName,\n        classesCoached: coachClassesCoached,\n        order: coachOrder,\n        image: coachImage\n      };\n      const formData = new FormData();\n      formData.append('imageData', coachFile[0]);\n      const fileRes = await axios.post('/api/images', formData);\n      const coachRes = await axios.post('/api/coaches', newCoach);\n      console.log(fileRes.data);\n      console.log(coachRes.data);\n\n      if (fileRes.data === coachRes.data) {\n        alert('New Coach Created');\n        const coachList = await axios.get('/api/coaches');\n        setCoaches(coachList.data);\n        resetForm();\n      } else {\n        alert('Something went wrong. Make sure image file type is .jpg or .png');\n      }\n    }\n\n    if (crudFunction === 'update') {\n      const newCoach = {\n        name: coachName,\n        classesCoached: coachClassesCoached,\n        order: coachOrder,\n        image: coachImage\n      };\n      const formData = new FormData();\n      formData.append('imageData', coachFile[0]);\n      const oldCoachRes = await axios.get(`/api/coaches/${currentItemID}`);\n      console.log(oldCoachRes.data._id);\n      const fileDeleteRes = await axios.delete('/api/images', oldCoachRes.data.image);\n      const fileRes = await axios.post('/api/images', formData);\n      const coachRes = await axios.post('/api/coaches', newCoach);\n      console.log(fileRes.data);\n      console.log(coachRes.data);\n\n      if (fileRes.data === \"New Coach Added!\" && coachRes.data === \"Coach Updated\" && fileDeleteRes.data === 'Coach Deleted') {\n        alert('Coach Updated');\n        const coachList = await axios.get('/api/coaches');\n        setCoaches(coachList.data);\n        resetForm();\n      } else {\n        alert('Something went wrong. Make sure image file type is .jpg or .png');\n      }\n    }\n  };\n\n  const handleUpdate = coachToUpdate => {\n    setCoachName(coachToUpdate.name);\n    setCoachClassesCoached(coachToUpdate.coachClassesCoached);\n\n    for (let item of coachClassesCoached) {\n      handleAddClass(item);\n    }\n\n    ;\n    setCoachImage(coachToUpdate.coachImage);\n    setCoachFile(coachToUpdate.coachFile);\n    setCoachOrder(coachToUpdate.coachOrder);\n    setCrudFunction('update');\n    setCurrentItemID(coachToUpdate._id);\n  };\n\n  const handleDelete = async coach => {\n    console.log(coach);\n    const coachRes = await axios.delete(`/api/coaches/${coach._id}`);\n    const fileRes = await axios.delete(`/api/images/${coach.image}`);\n    console.log(coachRes.data);\n    console.log(fileRes.data);\n\n    if (fileRes.data === coachRes.data) {\n      alert('SUCCESS!');\n      const coachList = await axios.get('/api/coaches');\n      setCoaches(coachList.data);\n    } else {\n      alert('Something went wrong');\n    }\n  };\n\n  const handleFileName = fileName => {\n    const fileParts = fileName.split('\\\\');\n    setCoachImage(fileParts[fileParts.length - 1]);\n  };\n\n  const handleSort = sortColumn => {\n    this.setState({\n      sortColumn\n    });\n  };\n\n  const paginate = page => {\n    const tableInfoLocal = { ...tableInfo\n    };\n    tableInfo.currentPage = page;\n    setTableInfo(tableInfoLocal);\n  };\n\n  const handleAddClass = classToAdd => {\n    setCoachClassesCoached(coachClassesCoached => [...coachClassesCoached, classToAdd]);\n  };\n\n  const sortedData = sortItems(coaches, tableInfo.sortColumn.path, tableInfo.sortColumn.order);\n  let paginatedData = sortedData.slice((tableInfo.currentPage - 1) * tableInfo.pageSize, tableInfo.currentPage * tableInfo.pageSize);\n  let formClasses = crudFunction ? \"formContainer is-visible\" : \"formContainer\";\n  useEffect(() => {\n    fetchCoaches();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ADMIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"COACHES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n          columns: columns,\n          sortColumn: tableInfo.sortColumn,\n          onSort: handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          data: paginatedData,\n          onDelete: handleDelete,\n          onUpdate: handleUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        pageSize: tableInfo.pageSize,\n        currentPage: tableInfo.currentPage,\n        paginate: paginate,\n        itemCount: coaches.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: formClasses,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          ref: formElement,\n          onSubmit: e => handleSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            name: \"name\",\n            value: coachName,\n            onChange: e => setCoachName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"classesCoached\",\n            children: \"Classes Coached\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"classesCoached\",\n            defaultValue: '-Select-',\n            name: \"classesCoached\",\n            onChange: e => {\n              handleAddClass(e.target.value);\n              e.target.value = '-Select-';\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"-Select-\",\n              disabled: true,\n              children: \"-Select-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Wrestling\",\n              children: \"Wrestling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Jiu-Jitsu\",\n              children: \"Jiu-Jitsu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Boxing\",\n              children: \"Boxing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"MMA\",\n              children: \"MMA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this), coachClassesCoached.length > 0 && coachClassesCoached.map(classCoached => {\n            console.log(classCoached);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: classCoached\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setCoachClassesCoached(coachClassesCoached.filter(x => x !== classCoached)),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this)]\n            }, classCoached, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"order\",\n            children: [\"Display Order \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"icon\",\n              title: \"This controls the order in which coaches are displayed. \\\"1\\\" would be at the top of the page. Numbers can be repeated.\",\n              icon: questionMark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"order\",\n            type: \"number\",\n            name: \"order\",\n            value: coachOrder,\n            onChange: e => setCoachOrder(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image\",\n            name: \"image\",\n            onChange: e => {\n              handleFileName(e.target.value);\n              setCoachFile(e.target.files);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => resetForm(),\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Admin, \"wegOlwGrkOVq5VC5AhwxUdIqu9k=\");\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["C:/Users/Rachel/Documents/GitHub/stcharlesmma/frontEnd/src/components/adminPage.jsx"],"names":["React","useState","useEffect","useRef","axios","FontAwesomeIcon","faQuestionCircle","questionMark","sortItems","Pagination","TableHeader","TableBody","Admin","coaches","setCoaches","coachName","setCoachName","coachClassesCoached","setCoachClassesCoached","coachImage","setCoachImage","coachFile","setCoachFile","undefined","coachOrder","setCoachOrder","tableInfo","setTableInfo","pageSize","currentPage","sortColumn","path","order","crudFunction","setCrudFunction","currentItemID","setCurrentItemID","columns","label","key","formElement","fetchCoaches","coachList","get","data","resetForm","current","reset","handleSubmit","e","id","preventDefault","newCoach","name","classesCoached","image","formData","FormData","append","fileRes","post","coachRes","console","log","alert","oldCoachRes","_id","fileDeleteRes","delete","handleUpdate","coachToUpdate","item","handleAddClass","handleDelete","coach","handleFileName","fileName","fileParts","split","length","handleSort","setState","paginate","page","tableInfoLocal","classToAdd","sortedData","paginatedData","slice","formClasses","target","value","map","classCoached","filter","x","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faQuestionCircle as questionMark } from '@fortawesome/free-solid-svg-icons';\r\nimport sortItems from './../utils/sort';\r\nimport Pagination from './common/pagination';\r\nimport TableHeader from './common/tableHeader';\r\nimport TableBody from './common/tableBody';\r\n\r\nconst Admin = () => {\r\n    const [coaches, setCoaches] = useState([]);\r\n    const [coachName, setCoachName] = useState('');\r\n    const [coachClassesCoached, setCoachClassesCoached] = useState([]);\r\n    const [coachImage, setCoachImage] = useState('');\r\n    const [coachFile, setCoachFile] = useState(undefined);\r\n    const [coachOrder, setCoachOrder] = useState(999);\r\n    const [tableInfo, setTableInfo] = useState({\r\n        pageSize: 6,\r\n        currentPage: 1,\r\n        sortColumn: {\r\n            path: 'name',\r\n            order: 'asc'\r\n        },\r\n    })\r\n    const [crudFunction, setCrudFunction] = useState('');\r\n    const [currentItemID, setCurrentItemID] = useState('');\r\n    const columns = [\r\n        { label: 'Name', path: 'name' },\r\n        { label: 'Display Order', path: 'order' },\r\n        { label: 'Image', path: 'image' },\r\n        { label: 'Classes Coached', path: 'classesCoached' },\r\n        { label: '', key: 1 },\r\n    ]\r\n\r\n    const formElement = useRef(null);\r\n\r\n    const fetchCoaches = async () => {\r\n        const coachList = await axios.get('/api/coaches');\r\n        setCoaches(coachList.data);\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setCoachName('');\r\n        setCoachClassesCoached([]);\r\n        setCoachImage('');\r\n        setCoachOrder(999);\r\n        setCoachFile(undefined);\r\n        setCrudFunction('');\r\n        setCurrentItemID('');\r\n        formElement.current.reset();\r\n    }\r\n\r\n    const handleSubmit = async (e, id) => {\r\n        e.preventDefault();\r\n\r\n        if (crudFunction === 'create') {\r\n            const newCoach = {\r\n                name: coachName,\r\n                classesCoached: coachClassesCoached,\r\n                order: coachOrder,\r\n                image: coachImage\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('imageData', coachFile[0]);\r\n            const fileRes = await axios.post('/api/images', formData);\r\n            const coachRes = await axios.post('/api/coaches', newCoach);\r\n            console.log(fileRes.data);\r\n            console.log(coachRes.data);\r\n            if (fileRes.data === coachRes.data) {\r\n                alert('New Coach Created');\r\n                const coachList = await axios.get('/api/coaches');\r\n                setCoaches(coachList.data);\r\n                resetForm();\r\n            } else {\r\n                alert('Something went wrong. Make sure image file type is .jpg or .png')\r\n            }\r\n        } if (crudFunction === 'update') {\r\n            const newCoach = {\r\n                name: coachName,\r\n                classesCoached: coachClassesCoached,\r\n                order: coachOrder,\r\n                image: coachImage\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('imageData', coachFile[0]);\r\n            const oldCoachRes = await axios.get(`/api/coaches/${currentItemID}`);\r\n            console.log(oldCoachRes.data._id);\r\n            const fileDeleteRes = await axios.delete('/api/images', oldCoachRes.data.image);\r\n            const fileRes = await axios.post('/api/images', formData);\r\n            const coachRes = await axios.post('/api/coaches', newCoach);\r\n            console.log(fileRes.data);\r\n            console.log(coachRes.data);\r\n            if (fileRes.data === \"New Coach Added!\" && coachRes.data === \"Coach Updated\" && fileDeleteRes.data === 'Coach Deleted') {\r\n                alert('Coach Updated');\r\n                const coachList = await axios.get('/api/coaches');\r\n                setCoaches(coachList.data);\r\n                resetForm();\r\n            } else {\r\n                alert('Something went wrong. Make sure image file type is .jpg or .png')\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleUpdate = coachToUpdate => {\r\n        setCoachName(coachToUpdate.name);\r\n        setCoachClassesCoached(coachToUpdate.coachClassesCoached);\r\n        for (let item of coachClassesCoached) {\r\n            handleAddClass(item);\r\n        };\r\n        setCoachImage(coachToUpdate.coachImage);\r\n        setCoachFile(coachToUpdate.coachFile);\r\n        setCoachOrder(coachToUpdate.coachOrder);\r\n        setCrudFunction('update');\r\n        setCurrentItemID(coachToUpdate._id);\r\n    }\r\n\r\n    const handleDelete = async (coach) => {\r\n        console.log(coach);\r\n        const coachRes = await axios.delete(`/api/coaches/${coach._id}`);\r\n        const fileRes = await axios.delete(`/api/images/${coach.image}`);\r\n        console.log(coachRes.data);\r\n        console.log(fileRes.data);\r\n        if (fileRes.data === coachRes.data) {\r\n            alert('SUCCESS!');\r\n            const coachList = await axios.get('/api/coaches');\r\n            setCoaches(coachList.data);\r\n        } else {\r\n            alert('Something went wrong');\r\n        }\r\n    }\r\n\r\n    const handleFileName = (fileName) => {\r\n        const fileParts = fileName.split('\\\\');\r\n        setCoachImage(fileParts[fileParts.length - 1])\r\n    }\r\n\r\n    const handleSort = (sortColumn) => {\r\n        this.setState({ sortColumn })\r\n    };\r\n\r\n    const paginate = (page) => {\r\n        const tableInfoLocal = { ...tableInfo };\r\n        tableInfo.currentPage = page\r\n        setTableInfo(tableInfoLocal);\r\n    }\r\n\r\n    const handleAddClass = (classToAdd) => {\r\n        setCoachClassesCoached(coachClassesCoached => [...coachClassesCoached, classToAdd]);\r\n    };\r\n\r\n    const sortedData = sortItems(coaches, tableInfo.sortColumn.path, tableInfo.sortColumn.order);\r\n\r\n    let paginatedData = sortedData.slice((tableInfo.currentPage - 1) * tableInfo.pageSize, tableInfo.currentPage * tableInfo.pageSize);\r\n\r\n    let formClasses = crudFunction ? \"formContainer is-visible\" : \"formContainer\";\r\n\r\n    useEffect(() => {\r\n        fetchCoaches();\r\n    }, [])\r\n\r\n    return (<>\r\n        <div className=\"container\">\r\n            <h1>ADMIN</h1>\r\n            <h2>COACHES</h2>\r\n            <table>\r\n                <TableHeader columns={columns} sortColumn={tableInfo.sortColumn} onSort={handleSort} />\r\n                <TableBody data={paginatedData} onDelete={handleDelete} onUpdate={handleUpdate} />\r\n            </table>\r\n            <Pagination\r\n                pageSize={tableInfo.pageSize}\r\n                currentPage={tableInfo.currentPage}\r\n                paginate={paginate}\r\n                itemCount={coaches.length}\r\n            />\r\n            <div className={formClasses}>\r\n                <form ref={formElement} onSubmit={(e) => handleSubmit(e)}>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input id=\"name\" type=\"text\" name=\"name\" value={coachName} onChange={(e) => setCoachName(e.target.value)} required />\r\n                    <label htmlFor=\"classesCoached\">Classes Coached</label>\r\n                    <select id=\"classesCoached\" defaultValue={'-Select-'} name=\"classesCoached\" onChange={(e) => {\r\n                        handleAddClass(e.target.value);\r\n                        e.target.value = '-Select-';\r\n                    }} required>\r\n                        <option value=\"-Select-\" disabled>-Select-</option>\r\n                        <option value=\"Wrestling\">Wrestling</option>\r\n                        <option value=\"Jiu-Jitsu\">Jiu-Jitsu</option>\r\n                        <option value=\"Boxing\">Boxing</option>\r\n                        <option value=\"MMA\">MMA</option>\r\n                    </select>\r\n                    {coachClassesCoached.length > 0\r\n                        && coachClassesCoached.map(classCoached => {\r\n                            console.log(classCoached);\r\n                            return (\r\n                                <div key={classCoached}>\r\n                                    <p>{classCoached}</p>\r\n                                    <button type=\"button\" onClick={() => setCoachClassesCoached(coachClassesCoached.filter(x => x !== classCoached))}>Remove</button>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    <label htmlFor=\"order\">Display Order <FontAwesomeIcon className=\"icon\" title='This controls the order in which coaches are displayed. \"1\" would be at the top of the page. Numbers can be repeated.' icon={questionMark} /></label>\r\n                    <input id=\"order\" type=\"number\" name=\"order\" value={coachOrder} onChange={(e) => setCoachOrder(e.target.value)} required />\r\n                    <label htmlFor=\"image\">Upload Image</label>\r\n                    <input type=\"file\" id=\"image\" name=\"image\" onChange={(e) => { handleFileName(e.target.value); setCoachFile(e.target.files); }} required />\r\n                    <button type=\"submit\">Submit</button>\r\n                    <button type=\"button\" onClick={() => resetForm()}>Reset</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}